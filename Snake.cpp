/*
- 👋 Made by: zoi_ittack/zoi5161
- 📫 Contact: baomun250@gmail.com
- 🌱 Time: 00:10 Mar 17 2023
- 🐤 Using for Mac OS
- 🌙 Coding language: C++
- 📡 Command language: Vietnamese
It is generated by a special author ✨zoi_ittack/zoi5161✨. Please respect it(Don't copy in any way).
*/

// Chạy 2 lệnh này trên Mac OS để thực thi chương trình
// g++ Tên_File.cpp -o Tên_File -lncurses
// ./Tên_File

#include <cstdlib>
#include <ncurses.h>

bool gameOver;

const int width = 20, height = 20;
int x, y, FruitX, FruitY, score;
enum  eDirection {stop = 0, left, right, up, down};
eDirection dir;
int TailX[100], TailY[100];
int nTail = 0;

void setup()
{
	initscr(); // Khởi tạo môi trường màn hình: ẩn con trỏ chuột, tắt việc hiển thị các ký tự đánh dấu dòng và cung cấp các tính năng như lưu trữ vị trí con trỏ của màn hình để có thể di chuyển con trỏ đến bất kỳ vị trí nào trên màn hình.
	clear(); // Làm sạch màn hình
	noecho(); // Tắt hiển thị các kí tự nhập từ bàn phím
	cbreak(); // Không đợi Enter mà thực thi ngay kí tự vừa nhập
	curs_set(0); // Ẩn con trỏ nhấp nháy

	gameOver = false;
	dir = stop;
	x = width/2;
	y = height/2;
	FruitX = (rand() % width) + 1;
	FruitY = (rand() % height) + 1;
	score = 0;
}

void draw()
{
	clear();

	for(int i=0; i<width+2; i++)
		mvprintw(0, i, "+"); // Di chuyển con trỏ sang vị trí (y,x) rồi in dấu "+";
	
	for(int i=0; i<height+2; i++)
	{
		for(int j=0; j<width+2; j++)
		{
			if(i == 0 || i == 21)
				mvprintw(i, j, "+");
			else if(j == 0 || j == 21)
				mvprintw(i, j, "+");
			else if(i == y && j == x)
				mvprintw(i, j, "0");
			else if(i == FruitY && j == FruitX)
				mvprintw(i, j, "@");
			else 
				for(int k=0; k<nTail; k++)
					if(TailX[k] == j && TailY[k] == i)
						mvprintw(i, j, "o");
		}
	}

	mvprintw(23, 0, "Score %d", score);

	refresh();
}

void input()
{
	keypad(stdscr, true);
	halfdelay(1);

	int c = getch();

	switch(c)
	{
		case KEY_LEFT:
		{	
			if(dir == right)
				dir = right;
			else 
				dir = left;
			break;
		}
		case KEY_RIGHT:
		{	
			if(dir == left)
				dir = left;
			else
				dir = right;
			break;
		}
		case KEY_UP:
		{	
			if(dir == down)
				dir = down;
			else
				dir = up;
			break;
		}
		case KEY_DOWN:
		{	
			if(dir == up)
				dir = up;
			else
				dir = down;
			break;
		}
		case KEY_ENTER:
			gameOver = true;
			break;
	}
}

void logic()
{
	int prevX = TailX[0];
	int prevY = TailY[0];
	int prev2X, prev2Y;
	TailX[0] = x;
	TailY[0] = y; 

	for(int i=1; i<nTail; i++)
	{
		prev2X = TailX[i];
		prev2Y = TailY[i];
		TailX[i] = prevX;
		TailY[i] = prevY;
		prevX = prev2X;
		prevY = prev2Y;
	}

	switch(dir)
	{
		case left:
			x--;
			break;
		case right:
			x++;
			break;
		case up:
			y--;
			break;
		case down:
			y++;
			break;
		default:
			break;
	}

	if(x > width || x < 1 || y < 1 || y > height)
		gameOver = true;
	
	if(x == FruitX && y == FruitY)
	{
		score++;
		FruitX = (rand() % width) + 1;
		FruitY = (rand() % height) + 1;
		nTail++;
	}

	for(int i=0; i<nTail; i++)
		if(TailX[i] == x && TailY[i] == y)
			gameOver = true;
}

int main()
{
	setup();

	while(!gameOver)
	{
		draw();
		input();
		logic();
	}

	clear();
	getch();
	endwin();
	
	return 0;
}